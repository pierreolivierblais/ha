blueprint:
  name: Lutron Pico 5 Button - Light Entity Control
  description: "This blueprint allows for the association of a Lutron Pico 5 Button (model PJ2-3BRL-GXX-X01) remote with a light entity. It is designed to simulate the operation of a standard Lutron Caseta wall dimmer including the press and hold functionality for the raise/lower buttons. It allows for the control over the brightness step percentage and transition speed and the assignment of any action to the middle button."
  source_url: https://gist.github.com/cymone-smart/9814a750a0d0cfb196fa1fa7ae3630bb

  domain: automation

  input:
    pico_1:
      name: Pico Device
      description: "Pico remote to associate with light entity."
      selector:
        device:
          model: PJ2-3BRL-GXX-X01 (Pico3ButtonRaiseLower)
    entity:
      name: Light Entity(ies)
      description: "Light entity to control."
      selector:
        entity:
          domain: light
          multiple: true
    transition_on:
      name: On Transition
      description: "The duration in seconds for the light entity to transition on."
      selector:
        number:
          min: 0
          max: 15
          unit_of_measurement: seconds
      default: 1
    transition_off:
      name: Off Transition
      description: "The duration in seconds for the light entity to transition off."
      selector:
        number:
          min: 0
          max: 15
          unit_of_measurement: seconds
      default: 2
    step:
      name: Brightness Step Percentage
      description: "The percentage of brightness to which the light is changed when the RAISE/LOWER buttons are pressed and held."
      selector:
        number:
          min: 1
          max: 33
          unit_of_measurement: percentage
      default: 10
    speed:
      name: Brightness Transition Speed
      description: "The rate of speed in milliseconds at which the brightness of the light entity will be changed."
      selector:
        number:
          min: 100
          max: 2000
          unit_of_measurement: milliseconds
      default: 500
    long_press_delay:
      name: Long Press Delay
      description: "The duration in milliseconds to consider a button press as a long press."
      selector:
        number:
          min: 500
          max: 2000
          unit_of_measurement: milliseconds
      default: 1000
    double_press_delay:
      name: Double Press Delay
      description: "The maximum delay in milliseconds between two presses to consider it a double press."
      selector:
        number:
          min: 50
          max: 500
          unit_of_measurement: milliseconds
      default: 250
    middle_button_action:
      name: Middle (Favorite) Button Override
      description: "Action(s) to execute when MIDDLE button is pressed. If left blank, action will default to setting the light entity to a brightness 80% and color temperature 2700."
      selector:
        action: {}
      default:
    middle_button_long_press_action:
      name: Middle (Favorite) Button Long Press Override
      description: "Action(s) to execute when MIDDLE button is long pressed."
      selector:
        action: {}
      default:
    middle_button_double_press_action:
      name: Middle (Favorite) Button Double Press Override
      description: "Action(s) to execute when MIDDLE button is double pressed."
      selector:
        action: {}
      default:

trigger:
  - platform: device
    device_id: !input pico_1
    domain: lutron_caseta
    type: press
    subtype: 'stop'
    id: middle_button_pressed
  - platform: state
    entity_id: !input pico_1
    for:
      milliseconds: !input long_press_delay
    id: long_press_detected

variables:
  step: !input step
  speed: !input speed
  long_press_delay: !input long_press_delay
  double_press_delay: !input double_press_delay
  middle_button_action: !input middle_button_action
  middle_button_long_press_action: !input middle_button_long_press_action
  middle_button_double_press_action: !input middle_button_double_press_action

condition: []

action:
  - choose:
      - conditions:
          - condition: trigger
            id: middle_button_pressed
        sequence:
          - choose:
              - conditions:
                  - condition: state
                    entity_id: input_boolean.middle_button_double_press
                    state: 'on'
                sequence:
                  - service: input_boolean.turn_off
                    entity_id: input_boolean.middle_button_double_press
                  - choose:
                      - conditions:
                          - condition: template
                            value_template: "{{ middle_button_double_press_action != none }}"
                        sequence: !input middle_button_double_press_action
                      default:
                        - service: notify.notify
                          data:
                            message: "Double press detected on {{ trigger.entity_id }}"
              default:
                - service: input_boolean.turn_on
                  entity_id: input_boolean.middle_button_double_press
                - delay:
                    milliseconds: !input double_press_delay
                - choose:
                    - conditions:
                        - condition: state
                          entity_id: input_boolean.middle_button_double_press
                          state: 'on'
                      sequence:
                        - service: input_boolean.turn_off
                          entity_id: input_boolean.middle_button_double_press
                        - choose:
                            - conditions:
                                - condition: template
                                  value_template: "{{ middle_button_action != none }}"
                              sequence: !input middle_button_action
                            default:
                              - service: light.turn_on
                                data:
                                  transition: !input transition_on
                                  brightness_pct: 80
                                  kelvin: 2700
                                target:
                                  entity_id: !input entity
      - conditions:
          - condition: trigger
            id: long_press_detected
        sequence:
          - choose:
              - conditions:
                  - condition: template
                    value_template: "{{ middle_button_long_press_action != none }}"
                sequence: !input middle_button_long_press_action
              default:
                - service: notify.notify
                  data:
                    message: "Long press detected on {{ trigger.entity_id }}"

mode: restart
